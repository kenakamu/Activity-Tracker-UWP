<Page
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Behaviors="using:Template10.Behaviors"
    xmlns:Core="using:Microsoft.Xaml.Interactions.Core"
    xmlns:Interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:controls="using:Template10.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="using:ActivityTrackerUWP.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="using:ActivityTrackerUWP.ViewModels" 
    xmlns:CustomControls="using:ActivityTrackerUWP.CustomControls"
    xmlns:models="using:ActivityTrackerUWP.Models"
    x:Class="ActivityTrackerUWP.Views.ContactDetailPage"
    mc:Ignorable="d">

    <Page.DataContext>
        <vm:ContactDetailPageViewModel />
    </Page.DataContext>

    <Grid x:Name="grid" Background="{ThemeResource ApplicationPageBackgroundThemeBrush}"  d:DataContext="{d:DesignData /SampleData/ContactDetailPageViewModelSampleData.xaml}">

        <!--  #region default visual states  -->
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="AdaptiveVisualStateGroup">
                <VisualState x:Name="VisualStateNarrow">
                    <VisualState.Setters>
                        <Setter Target="contentGrid.(Grid.Padding)">
                            <Setter.Value>
                                <Thickness>0</Thickness>
                            </Setter.Value>
                        </Setter>
                        <Setter Target="checkinGrid.(Visibility)" Value="Collapsed" />
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NarrowMinWidth}" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="VisualStateNormal">
                    <VisualState.Setters>
                        <Setter Target="checkinGrid.(Visibility)" Value="Collapsed" />
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource NormalMinWidth}" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="VisualStateMedium">
                    <VisualState.Setters>
                        <Setter Target="firstColumn.(Width)" Value="380" />
                        <Setter Target="secondColumn.(Width)" Value="*" />
                        <Setter Target="checkinGrid.(Visibility)" Value="Visible" />
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource MediumMinWidth}" />
                    </VisualState.StateTriggers>
                </VisualState>
                <VisualState x:Name="VisualStateWide">
                    <VisualState.Setters>
                        <Setter Target="firstColumn.(Width)" Value="480" />
                        <Setter Target="secondColumn.(Width)" Value="*" />
                        <Setter Target="checkinGrid.(Visibility)" Value="Visible" />
                    </VisualState.Setters>
                    <VisualState.StateTriggers>
                        <AdaptiveTrigger MinWindowWidth="{StaticResource WideMinWidth}" />
                    </VisualState.StateTriggers>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
        <!--  #endregion  -->

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <!--  page header  -->
        <controls:PageHeader x:Name="pageHeader" BackButtonVisibility="Collapsed" Content="Contact Detail" Frame="{x:Bind Frame}">
            <Interactivity:Interaction.Behaviors>
                <Behaviors:EllipsisBehavior Visibility="Auto" />
            </Interactivity:Interaction.Behaviors>
            <controls:PageHeader.PrimaryCommands>
                <AppBarButton Icon="{x:Bind ViewModel.Pin, Mode=OneWay}" Click="{x:Bind ViewModel.PinContact}" Label="{x:Bind ViewModel.PinLabel, Mode=OneWay}"/>
            </controls:PageHeader.PrimaryCommands>
            <controls:PageHeader.SecondaryCommands>
                <AppBarButton Click="{x:Bind ViewModel.GotoAbout}" Label="About" />
            </controls:PageHeader.SecondaryCommands>
        </controls:PageHeader>

        <!--  page content  -->
        <Grid x:Name="contentGrid" Grid.Row="1" Background="{StaticResource BACKGROUND_COLOR}" Padding="12">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition x:Name="firstColumn" Width="1*"/>
                    <ColumnDefinition x:Name="secondColumn" Width="0"/>
                </Grid.ColumnDefinitions>
                <!-- Contact Detail -->
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- Contact Card -->
                    <Grid Padding="12,0">
                        <StackPanel>
                            <StackPanel Orientation="Horizontal">
                                <!-- Picture, Name, JobTitle, and ParentCompany name -->
                                <CustomControls:EntityImageControl ImageBytes="{x:Bind ViewModel.CurrentContact.EntityImage, Mode=OneWay}" />
                                <StackPanel Margin="12,4,0,4">
                                    <TextBlock Text="{x:Bind ViewModel.CurrentContact.FullName, Mode=OneWay}" Style="{StaticResource TextBlock_Card_FirstLine}"/>
                                    <TextBlock Style="{StaticResource TextBlock_List_SecondLine}">
                                        <Run Text="{x:Bind ViewModel.CurrentContact.ParentCompany, Mode=OneWay}" />
                                        <Run Text="-" />
                                        <Run Text="{x:Bind ViewModel.CurrentContact.JobTitle, Mode=OneWay}" />
                                    </TextBlock>
                                </StackPanel>
                            </StackPanel>

                            <!-- Card Items-->
                            <StackPanel Style="{StaticResource StackPanel_Card_Item}">
                                <Image Source="../Assets/icon-contact-map.png" Style="{StaticResource Image_Card_Item}" />
                                <TextBlock Text="{x:Bind ViewModel.CurrentContact.Address1, Mode=OneWay}" Style="{StaticResource TextBlock_Card_Item}" Tapped="{x:Bind ViewModel.AddressTo}"/>
                            </StackPanel>
                            <StackPanel Style="{StaticResource StackPanel_Card_Item}">
                                <Image Source="../Assets/icon-contact-phone.png" Style="{StaticResource Image_Card_Item}" />
                                <TextBlock Text="{x:Bind ViewModel.CurrentContact.Telephone1, Mode=OneWay}" Style="{StaticResource TextBlock_Card_Item}" Tapped="{x:Bind ViewModel.CallTo}" />
                            </StackPanel>
                            <StackPanel Style="{StaticResource StackPanel_Card_Item}">
                                <Image Source="../Assets/icon-contact-email.png" Style="{StaticResource Image_Card_Item}" />
                                <TextBlock Text="{x:Bind ViewModel.CurrentContact.Email1, Mode=OneWay}" Style="{StaticResource TextBlock_Card_Item}" Tapped="{x:Bind ViewModel.MailTo}"/>
                            </StackPanel>
                        </StackPanel>
                    </Grid>

                    <!-- Page Buttons (Only first button is implemented -->
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>

                        <Button BorderThickness="0" HorizontalAlignment="Center" Width="60" Height="60" Click="{x:Bind ViewModel.CheckIn}">
                            <Button.Background>
                                <ImageBrush Stretch="Uniform" ImageSource="../Assets/icon-action-checkmark.png"/>
                            </Button.Background>
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Grid>
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="Pressed">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <ImageBrush Stretch="Uniform" ImageSource="../Assets/icon-action-checkmark-click.png"/>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <ImageBrush Stretch="Uniform" ImageSource="../Assets/icon-action-checkmark-click.png"/>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="3">
                                                        <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Border>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Button IsEnabled="{x:Bind ViewModel.CurrentContact.Telephone1, Converter={StaticResource ObjectToBoolConverter}, Mode=OneWay}" BorderThickness="0" Grid.Column="1" HorizontalAlignment="Center" Width="60" Height="60" Click="{x:Bind ViewModel.CallTo}">
                            <Button.Background>
                                <ImageBrush Stretch="Uniform" ImageSource="../Assets/icon-action-phone.png"/>
                            </Button.Background>
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Grid>
                                                    <VisualStateManager.VisualStateGroups>
                                                        <VisualStateGroup x:Name="CommonStates">
                                                            <VisualState x:Name="Normal"/>
                                                            <VisualState x:Name="Pressed">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <ImageBrush Stretch="Uniform" ImageSource="../Assets/icon-action-phone-disabled.png"/>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                            <VisualState x:Name="Disabled">
                                                                <Storyboard>
                                                                    <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="Border">
                                                                        <DiscreteObjectKeyFrame KeyTime="0">
                                                                            <DiscreteObjectKeyFrame.Value>
                                                                                <ImageBrush Stretch="Uniform" ImageSource="../Assets/icon-action-phone-disabled.png"/>
                                                                            </DiscreteObjectKeyFrame.Value>
                                                                        </DiscreteObjectKeyFrame>
                                                                    </ObjectAnimationUsingKeyFrames>
                                                                </Storyboard>
                                                            </VisualState>
                                                        </VisualStateGroup>
                                                    </VisualStateManager.VisualStateGroups>
                                                    <Border x:Name="Border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Margin="3">
                                                        <ContentPresenter x:Name="ContentPresenter" AutomationProperties.AccessibilityView="Raw" ContentTemplate="{TemplateBinding ContentTemplate}" ContentTransitions="{TemplateBinding ContentTransitions}" Content="{TemplateBinding Content}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                                    </Border>
                                                </Grid>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </Button.Style>
                        </Button>
                        <Image Grid.Column="2" Source="../Assets/icon-action-note-disabled.png" VerticalAlignment="Center" HorizontalAlignment="Center" Height="50"/>
                        <Image Grid.Column="3" Source="../Assets/icon-action-flag-disabled.png" VerticalAlignment="Center" HorizontalAlignment="Center" Height="50"/>
                    </Grid>
                    
                    <!-- Activity List Title -->
                    <Grid Grid.Row="2">
                        <TextBlock Text="RECENTLY COMPLETED ACTIVITIES" Style="{StaticResource TextBlock_ListHeader}"/>
                    </Grid>

                    <!-- Activity List -->
                    <Grid Grid.Row="3" Style="{StaticResource Grid_ActivityList}">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <StackPanel>
                                <ListView
                                ItemsSource="{x:Bind ViewModel.CompletedActivities, Mode=OneWay}"
                                IsItemClickEnabled="True"
                                ItemClick="{x:Bind ViewModel.TaskClicked}">
                                    <ListView.ItemTemplate>
                                        <DataTemplate x:DataType="models:Activity">
                                            <Grid>
                                                <StackPanel Orientation="Horizontal">
                                                    <Image Source="{x:Bind ActivityIcon, FallbackValue=ms-appx:///Assets/icon-activity-generic.png}" Style="{StaticResource Image_List}" />
                                                    <StackPanel Padding="16,0,12,4">
                                                        <TextBlock Text="{x:Bind Subject}" Style="{StaticResource TextBlock_ActivityList_FirstLine}" />
                                                        <TextBlock Text="{x:Bind ActualEndDate}" Style="{StaticResource TextBlock_ActivityList_SecondLine}" />
                                                    </StackPanel>
                                                </StackPanel>
                                                <Line Style="{StaticResource Line_List}" />
                                            </Grid>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                </ListView>
                            </StackPanel>
                        </ScrollViewer>
                    </Grid>
                </Grid>

                <!-- CheckIn Item -->
                <Grid x:Name="checkinGrid" Grid.Column="1" HorizontalAlignment="Left" Padding="12" MaxWidth="480" Visibility="{x:Bind ViewModel.IsCheckInVisible, Converter={StaticResource ObjectToVisibilityConverter}, Mode=TwoWay}">
                    <StackPanel Visibility="{x:Bind ViewModel.CurrentActivity, Converter={StaticResource ObjectToVisibilityConverter}, Mode=OneWay}">
                        <CustomControls:CheckInItem DataContext="{x:Bind ViewModel.CurrentActivity, Mode=OneWay}"/>
                        <StackPanel Orientation="Horizontal">
                            <AppBarButton Icon="Save" Label="Save" Click="{x:Bind ViewModel.SaveTask}"/>
                            <AppBarButton Icon="Delete" Label="Delete" Click="{x:Bind ViewModel.DeleteTask}"/>
                            <AppBarButton Icon="Microphone" Label="Voice" Click="{x:Bind ViewModel.GetVoice}" />
                        </StackPanel>
                    </StackPanel>
                </Grid>
            </Grid>
        </Grid>
    </Grid>
</Page>
